---
import TaskWidget from "./TaskWidget.svelte";
import CoworkingGuide from "../images/projects/coworking-guide.webp";
import Wnrs from "../images/projects/wnrs.webp";
import TwitchPlays from "../images/projects/twitchplays.webp";
import ProjectLeft from "./ProjectLeft.astro";
import ProjectRight from "./ProjectRight.astro";
---

<div
	id="projects"
	class="flex h-fit flex-col items-center [perspective:1000px]"
>
	<div class="w-full max-w-[1440px]">
		<ProjectLeft
			image={CoworkingGuide}
			alt="coworking guide"
			href="https://coworking-guide.vercel.app/"
			title="Coworking Guide"
			label="Visit Site"
			description="A guide to coworking streams for streamers, covers wide range of topics from tips on how to get started with setting up stream to how to grow your audience!"
			tags={[
				{
					text: "Astro",
					bgColor: "white",
					textColor: "black",
				},
				{
					text: "TypeScript",
					bgColor: "#3178C6",
					textColor: "white",
				},
				{
					text: "Markdown",
					bgColor: "black",
					textColor: "white",
				},
			]}
		/>
		<div
			class="mt-10 flex h-fit w-full flex-col-reverse justify-center px-10 lg:flex-row lg:px-16"
		>
			<div
				class="flex h-fit w-full flex-col items-center justify-center lg:h-[340px] lg:w-1/2 lg:items-end lg:px-10"
			>
				<h2 class="mb-5 text-center text-3xl font-bold lg:text-right">
					Chat-Task-Tic Widget
				</h2>
				<p
					class="max-w-lg text-center text-xl text-balance lg:max-w-none lg:text-right"
				>
					Used by 100+ Twitch streamers, allow viewers and streamers
					to add their own tasks to the widget for accountability!
					Easy to setup and the customization possibilities are
					endless!
				</p>
				<div
					class="mt-5 flex w-full flex-row flex-wrap justify-center lg:justify-end"
				>
					<div
						class="bg-html my-1 mr-1 w-fit rounded-full px-3 py-1 text-white transition-colors duration-300"
					>
						HTML
					</div>
					<div
						class="my-1 mr-1 w-fit rounded-full bg-blue-700 px-3 py-1 text-white transition-colors duration-300"
					>
						CSS
					</div>
					<div
						class="my-1 mr-1 w-fit rounded-full bg-yellow-400 px-3 py-1 text-black transition-colors duration-300"
					>
						Javascript
					</div>
				</div>
			</div>
			<div class="mb-10 flex items-center justify-center lg:hidden">
				<a
					href="https://github.com/liyunze-coding/chat-task-tic-overlay-infinity"
					target="_blank"
					class="rounded-xl bg-blue-600 px-5 py-3 font-bold opacity-100 transition-colors duration-300 hover:bg-white hover:text-blue-600"
					>View repository</a
				>
			</div>
			<TaskWidget client:visible />
		</div>

		<ProjectLeft
			image={Wnrs}
			alt="We're not really strangers"
			href="https://liyunze-coding.github.io/wnrs/"
			label="Visit Site"
			title="We're not really strangers"
			description="Otherwise abbreviated as 'WNRS', this is a digitaladaptation of the popular card game designed to foster meaningful connections through engaging questions and prompts."
			tags={[
				{
					text: "React",
					bgColor: "var(--color-react)",
					textColor: "black",
				},
				{
					text: "TypeScript",
					bgColor: "var(--color-typescript)",
					textColor: "white",
				},
			]}
		/>
		<ProjectRight
			image={TwitchPlays}
			alt="Twitch Plays X"
			href="https://github.com/liyunze-coding/TwitchPlaysX"
			title="Twitch Plays X"
			description={`Allow Twitch chatters to play games such as Pokemon!
					Chatters can enter messages such as "up up down down left
					right B A" and the Python program will trigger the
					corresponding keypresses.`}
			tags={[
				{
					text: "win32API",
					bgColor: "var(--color-win32api)",
					textColor: "white",
				},
				{
					text: "Python",
					bgColor: "var(--color-python)",
					textColor: "white",
				},
			]}
		/>
	</div>
</div>

<style>
	.image-container img {
		transition: transform 0.5s ease-in-out;
	}
	@media (min-width: 1025px) {
		.image-container:hover > img {
			transform: rotateY(0deg) rotateX(0deg) translateZ(0px)
				translateX(-50%) translateY(-50%);
		}

		.image-container:hover > .visit-div {
			opacity: 100%;
			transition: opacity 0.3s ease-in-out;
			transition-delay: 0.3s;
		}
	}
</style>
